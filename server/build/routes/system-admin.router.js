"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const system_admin_controller_1 = require("../controllers/system-admin.controller");
const verifyToken_1 = __importDefault(require("../middlewares/verifyToken"));
const catchAsyncErrors_1 = __importDefault(require("../utils/catchAsyncErrors"));
const systemAdminRouter = express_1.default.Router();
systemAdminRouter.post("/login", (0, catchAsyncErrors_1.default)(system_admin_controller_1.handleSystemAdminLogin));
systemAdminRouter.get("/all/users", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getAllRegisteredUser));
systemAdminRouter.get("/all/workspaces", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getAllWorkspace));
systemAdminRouter.delete("/:userId/deregister-user", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.deRegisterUser));
systemAdminRouter.delete("/:workspaceId/delete-workspace", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.deleteWorkspace));
systemAdminRouter.get("/workspace/user/count", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getTotalWorkspaceandUser));
systemAdminRouter.get("/:workspaceId/additional-details", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getAdditionalWorkspaceDetails));
systemAdminRouter.get("/userbymonth", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getUsersRegisteredByMonth));
systemAdminRouter.get("/workspacebyMonth", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getWorkspaceRegisteredByMonth));
systemAdminRouter.get("/:searchTerm/workspace-search", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getWorkspaceBySearch));
systemAdminRouter.get("/:searchTerm/user-search", (0, catchAsyncErrors_1.default)(verifyToken_1.default), (0, catchAsyncErrors_1.default)(system_admin_controller_1.getUserBySearch));
exports.default = systemAdminRouter;
